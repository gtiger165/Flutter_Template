name: Test Mobile CI

on:
  push:
    branches:
      - master

jobs:
  #ios job
  build-ios:
    # This job will run on macos virtual machine
    runs-on: macos-latest

    # Setup Java environment in order to build the ios app.
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Setup the flutter environment.
      # - uses: subosito/flutter-action@v1.5.3
      #   with:
      #     channel: "stable" # 'dev', 'alpha', default to: 'stable'
      # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # run code generation
      # PROJECT SPECIFIC
      - run: flutter packages pub run build_runner build --delete-conflicting-outputs

      # Run native splash screen creation
      # PROJECT SPECIFIC
      # - run: flutter pub run flutter_native_splash:create

      # Run tests for our flutter project.
      - run: flutter test

      # Build ipa.
      # - run: flutter build ios --release --no-codesign --dart-define=CHECKOUT_API_KEY=${{ secrets.CHECKOUT_API_KEY }} --dart-define=APP_DISCORD_OAUTH_CLIENT_ID=${{ secrets.APP_DISCORD_OAUTH_CLIENT_ID }} --dart-define=APP_DISCORD_OAUTH_CLIENT_SECRET=${{ secrets.APP_DISCORD_OAUTH_CLIENT_SECRET }}

      # Upload generated ipa to the artifacts.
      - name: Upload ios artifact
        uses: actions/upload-artifact@master
        with:
          name: ios-build
          path: build/ios/iphoneos

  #android job
  build-android:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Setup the flutter environment.
      # - uses: subosito/flutter-action@v1.5.3
      #   with:
      #     channel: "stable" # 'dev', 'alpha', default to: 'stable'
      # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # run code generation
      # PROJECT SPECIFIC
      - run: flutter packages pub run build_runner build --delete-conflicting-outputs

      # Run native splash screen creation
      # PROJECT SPECIFIC
      - run: flutter pub run flutter_native_splash:create

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze

      # Run tests for our flutter project.
      - run: flutter test

      # Build apk.
      # - run: flutter build apk --obfuscate --split-debug-info=build/app/outputs/apk/release/debug_info --dart-define=CHECKOUT_API_KEY=${{ secrets.CHECKOUT_API_KEY }} --dart-define=APP_DISCORD_OAUTH_CLIENT_ID=${{ secrets.APP_DISCORD_OAUTH_CLIENT_ID }} --dart-define=APP_DISCORD_OAUTH_CLIENT_SECRET=${{ secrets.APP_DISCORD_OAUTH_CLIENT_SECRET }}

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release
